<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.six.system.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.six.system.domain.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="mail" jdbcType="VARCHAR" property="mail" />
    <result column="say" jdbcType="VARCHAR" property="say" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="reset_code" jdbcType="VARCHAR" property="resetCode" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="operate_ip" jdbcType="VARCHAR" property="operateIp" />
    <result column="operate_id" jdbcType="INTEGER" property="operateId" />
    <result column="operate_name" jdbcType="VARCHAR" property="operateName" />
    <result column="operate_time" jdbcType="TIMESTAMP" property="operateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.six.system.domain.User">
    <result column="json_info" jdbcType="LONGVARCHAR" property="jsonInfo" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, nick_name, sex, birthday, phone, mail, say, avatar, username, password,
    reset_code, status, remark, operate_ip, operate_id, operate_name, operate_time
  </sql>
  <sql id="Blob_Column_List">
    json_info
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.six.system.domain.User">
    insert into sys_user (id, name, nick_name,
      sex, birthday, phone,
      mail, say, avatar,
      username, password, reset_code,
      status, remark, operate_ip,
      operate_id, operate_name, operate_time,
      json_info)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR},
      #{sex,jdbcType=INTEGER}, #{birthday,jdbcType=DATE}, #{phone,jdbcType=VARCHAR},
      #{mail,jdbcType=VARCHAR}, #{say,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR},
      #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{resetCode,jdbcType=VARCHAR},
      #{status,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{operateIp,jdbcType=VARCHAR},
      #{operateId,jdbcType=INTEGER}, #{operateName,jdbcType=VARCHAR}, #{operateTime,jdbcType=TIMESTAMP},
      #{jsonInfo,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.six.system.domain.User">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="mail != null">
        mail,
      </if>
      <if test="say != null">
        say,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="resetCode != null">
        reset_code,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="operateIp != null">
        operate_ip,
      </if>
      <if test="operateId != null">
        operate_id,
      </if>
      <if test="operateName != null">
        operate_name,
      </if>
      <if test="operateTime != null">
        operate_time,
      </if>
      <if test="jsonInfo != null">
        json_info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="say != null">
        #{say,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="resetCode != null">
        #{resetCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="operateIp != null">
        #{operateIp,jdbcType=VARCHAR},
      </if>
      <if test="operateId != null">
        #{operateId,jdbcType=INTEGER},
      </if>
      <if test="operateName != null">
        #{operateName,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null">
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="jsonInfo != null">
        #{jsonInfo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.six.system.domain.User">
    update sys_user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        mail = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="say != null">
        say = #{say,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="resetCode != null">
        reset_code = #{resetCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="operateIp != null">
        operate_ip = #{operateIp,jdbcType=VARCHAR},
      </if>
      <if test="operateId != null">
        operate_id = #{operateId,jdbcType=INTEGER},
      </if>
      <if test="operateName != null">
        operate_name = #{operateName,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null">
        operate_time = #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="jsonInfo != null">
        json_info = #{jsonInfo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.six.system.domain.User">
    update sys_user
    set name = #{name,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=DATE},
      phone = #{phone,jdbcType=VARCHAR},
      mail = #{mail,jdbcType=VARCHAR},
      say = #{say,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      reset_code = #{resetCode,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      operate_ip = #{operateIp,jdbcType=VARCHAR},
      operate_id = #{operateId,jdbcType=INTEGER},
      operate_name = #{operateName,jdbcType=VARCHAR},
      operate_time = #{operateTime,jdbcType=TIMESTAMP},
      json_info = #{jsonInfo,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.six.system.domain.User">
    update sys_user
    set name = #{name,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=DATE},
      phone = #{phone,jdbcType=VARCHAR},
      mail = #{mail,jdbcType=VARCHAR},
      say = #{say,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      reset_code = #{resetCode,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      operate_ip = #{operateIp,jdbcType=VARCHAR},
      operate_id = #{operateId,jdbcType=INTEGER},
      operate_name = #{operateName,jdbcType=VARCHAR},
      operate_time = #{operateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--*****************************华丽的分割线************************************-->
  <select id="selectByKeyword" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" />
    FROM sys_user
    WHERE username = #{keyword,jdbcType=VARCHAR}
    OR phone = #{keyword,jdbcType=VARCHAR}
    OR mail = #{keyword,jdbcType=VARCHAR}
  </select>
  <select id="countAll" resultType="java.lang.Integer">
    SELECT COUNT(id)
    FROM sys_user
    WHERE 1=1
    <if test="query != null">
      AND (
        U.name LIKE CONCAT('%',#{query,jdbcType=VARCHAR},'%')
        OR U.phone LIKE CONCAT('%',#{query,jdbcType=VARCHAR},'%')
        OR U.mail LIKE CONCAT('%',#{query,jdbcType=VARCHAR},'%')
      )
    </if>
  </select>
  <select id="selectPageAll" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM sys_user
    WHERE 1=1
    <if test="query != null">
      AND (
        U.name LIKE CONCAT('%',#{query,jdbcType=VARCHAR},'%')
        OR U.phone LIKE CONCAT('%',#{query,jdbcType=VARCHAR},'%')
        OR U.mail LIKE CONCAT('%',#{query,jdbcType=VARCHAR},'%')
      )
    </if>
    LIMIT #{page.offset,jdbcType=INTEGER}, #{page.size,jdbcType=INTEGER}
  </select>
  <select id="countByDeptId" resultType="java.lang.Integer">
    SELECT COUNT(DU.user_id)
    FROM sys_dept_user DU, sys_user U
    WHERE DU.dept_id = #{deptId,jdbcType=INTEGER}
    AND DU.user_id = U.id
    <if test="query != null">
      AND (
        U.name LIKE CONCAT('%',#{query,jdbcType=VARCHAR},'%')
        OR U.phone LIKE CONCAT('%',#{query,jdbcType=VARCHAR},'%')
        OR U.mail LIKE CONCAT('%',#{query,jdbcType=VARCHAR},'%')
      )
    </if>
  </select>
  <select id="selectPageByDeptId" resultMap="BaseResultMap">
    SELECT U.id, U.name, U.nick_name, U.sex, U.birthday, U.phone, U.mail, U.say, U.avatar, U.username,
    U.status, U.remark, U.operate_ip, U.operate_id, U.operate_name, U.operate_time
    FROM sys_dept_user DU, sys_user U
    WHERE DU.dept_id = #{deptId,jdbcType=INTEGER}
    AND DU.user_id = U.id
    <if test="query != null">
      AND (
        U.name LIKE CONCAT('%',#{query,jdbcType=VARCHAR},'%')
        OR U.phone LIKE CONCAT('%',#{query,jdbcType=VARCHAR},'%')
        OR U.mail LIKE CONCAT('%',#{query,jdbcType=VARCHAR},'%')
      )
    </if>
    LIMIT #{page.offset,jdbcType=INTEGER}, #{page.size,jdbcType=INTEGER}
  </select>
  <select id="countByRoleId" resultType="java.lang.Integer">
    SELECT COUNT(RU.user_id)
    FROM sys_role_user RU, sys_user U
    WHERE RU.role_id = #{roleId,jdbcType=INTEGER}
    AND RU.user_id = U.id
    <if test="query != null">
      AND (
        U.name LIKE CONCAT('%',#{query,jdbcType=VARCHAR},'%')
        OR U.phone LIKE CONCAT('%',#{query,jdbcType=VARCHAR},'%')
        OR U.mail LIKE CONCAT('%',#{query,jdbcType=VARCHAR},'%')
      )
    </if>
  </select>
  <select id="selectPageByRoleId" resultMap="BaseResultMap">
    SELECT U.id, U.name, U.nick_name, U.sex, U.birthday, U.phone, U.mail, U.say, U.avatar, U.username,
    U.status, U.remark, U.operate_ip, U.operate_id, U.operate_name, U.operate_time
    FROM sys_role_user RU, sys_user U
    WHERE RU.role_id = #{roleId,jdbcType=INTEGER}
    AND RU.user_id = U.id
    <if test="query != null">
      AND (
        U.name LIKE CONCAT('%',#{query,jdbcType=VARCHAR},'%')
        OR U.phone LIKE CONCAT('%',#{query,jdbcType=VARCHAR},'%')
        OR U.mail LIKE CONCAT('%',#{query,jdbcType=VARCHAR},'%')
      )
    </if>
    LIMIT #{page.offset,jdbcType=INTEGER}, #{page.size,jdbcType=INTEGER}
  </select>
  <select id="countUnRoleId" resultType="java.lang.Integer">
    SELECT COUNT(1)
    FROM sys_user U
    WHERE NOT EXISTS(SELECT 1 FROM sys_role_user RU WHERE RU.user_id = U.id AND RU.role_id = #{roleId,jdbcType=INTEGER})
    <if test="query != null">
      AND (
        U.name LIKE CONCAT('%',#{query,jdbcType=VARCHAR},'%')
        OR U.phone LIKE CONCAT('%',#{query,jdbcType=VARCHAR},'%')
        OR U.mail LIKE CONCAT('%',#{query,jdbcType=VARCHAR},'%')
      )
    </if>
  </select>
  <select id="selectPageUnRoleId" resultMap="BaseResultMap">
    SELECT U.id, U.name, U.nick_name, U.sex, U.birthday, U.phone, U.mail, U.say, U.avatar, U.username,
    U.status, U.remark, U.operate_ip, U.operate_id, U.operate_name, U.operate_time
    FROM sys_user U
    WHERE NOT EXISTS(SELECT 1 FROM sys_role_user RU WHERE RU.user_id = U.id AND RU.role_id = #{roleId,jdbcType=INTEGER})
    <if test="query != null">
      AND (
        U.name LIKE CONCAT('%',#{query,jdbcType=VARCHAR},'%')
        OR U.phone LIKE CONCAT('%',#{query,jdbcType=VARCHAR},'%')
        OR U.mail LIKE CONCAT('%',#{query,jdbcType=VARCHAR},'%')
      )
    </if>
    LIMIT #{page.offset,jdbcType=INTEGER}, #{page.size,jdbcType=INTEGER}
  </select>
</mapper>